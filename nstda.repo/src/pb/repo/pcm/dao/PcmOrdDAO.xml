<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pb.repo.pcm.dao.PcmOrdDAO">
    <resultMap id="result" type="pcmOrdModel">
        <result property="id" column="id"/>
        <result property="objective" column="objective"/>
        <result property="sectionId" column="section_id"/>
        <result property="prId" column="pr_id"/>
        <result property="appBy" column="app_by"/>
        <result property="docType" column="doc_type"/>
        <result property="workflowInsId" column="workflow_ins_id"/>
        <result property="total" column="total"/>
        <result property="docRef" column="doc_ref"/>
        <result property="folderRef" column="folder_ref"/>
        <result property="waitingLevel" column="waiting_level"/>
        <result property="createdTime" column="created_time"/>
        <result property="createdBy" column="created_by"/>
        <result property="updatedTime" column="updated_time"/>
        <result property="updatedBy" column="updated_by"/>
        <result property="status" column="status"/>
        <result property="wfStatus" column="wf_status"/>
        <result property="orgName" column="org_name"/>
    </resultMap>
    
    <select id="list" resultMap="result" parameterType="map">
        SELECT
		    REQ.ID, total, objective,
		    	section_id, pr_id, doc_type, app_by, 
				WF_STATUS, STATUS, 
				WORKFLOW_INS_ID, TASK_ID,
				UPDATED_TIME, UPDATED_BY, CREATED_TIME, 
				FOLDER_REF, DOC_REF,
			CASE 
  				WHEN STATUS='D' THEN '1'
            	WHEN STATUS='W2' THEN '2'
            	WHEN STATUS='W1' THEN '3'
            	WHEN STATUS='S' THEN '4'
            	WHEN STATUS='C1' THEN '5'
            	WHEN STATUS='X1' THEN '6'
            	ELSE STATUS
       		END ORDER_FIELD,		    
	      	COALESCE(CBY ,CREATED_BY) CREATED_BY,
		    COUNT(*) OVER() totalRowCount, o.name org_name
		FROM
		    (SELECT ID, M.total, objective, 
				section_id, pr_id, doc_type, app_by,
				CASE WHEN (W.STATUS IS NULL) THEN ''
				ELSE CONCAT (W.BY ,'-', W.STATUS ,'-', to_char(W.BY_TIME, 'DD/MM/YYYY HH24:MI')) 
				END WF_STATUS, M.STATUS, 
				M.WORKFLOW_INS_ID, TASK_ID,
				UPDATED_TIME, UPDATED_BY, CREATED_TIME, CREATED_BY,
				(select first_name from pb2_ext_hr_employee where lpad(employee_code,6,'0') = M.created_by) CBY,
				FOLDER_REF, DOC_REF 
			FROM pb2_pcm_ord M LEFT JOIN 
			(
			SELECT MASTER_ID, WORKFLOW_INS_ID, STATUS, e.first_name as BY, BY_TIME, TASK_ID 
			FROM pb2_main_workflow w  left join pb2_ext_hr_employee e on w.by = lpad(e.employee_code,6,'0')
			WHERE TYPE='PCM_ORD' AND 
			w.ID IN (
				SELECT MAX(ID)
				FROM pb2_main_workflow 
				GROUP BY MASTER_ID
			)) AS W ON M.ID = W.MASTER_ID 
			WHERE (
	 			ID IN ( 
					SELECT master_id 
					FROM pb2_main_workflow_reviewer 
					WHERE reviewer_user LIKE #{loginL} 
					<foreach item="item" index="index" collection="roleList"
				      open="OR (" separator="OR" close=")">
				        reviewer_group LIKE #{item}
				    </foreach>
					GROUP BY master_id
				)
				OR CREATED_BY = #{loginE} 
				OR APP_BY = #{loginE}
			)
		) REQ 
		LEFT JOIN pb2_ext_res_section s on REQ.section_id=s.id
		LEFT JOIN pb2_ext_res_org o on s.org_id = o.id
		
		WHERE
			1=1
		<if test="searchTerm != null">
		AND (REQ.id ILIKE #{searchTerm}
		OR objective ILIKE #{searchTerm}
		OR pr_id ILIKE #{searchTerm}
		)			
		</if>
		<if test="doc_type != null">
			AND doc_type=#{doc_type}
		</if>
		<if test="status != null">
			AND status=#{status}
		</if>
		ORDER BY ${orderBy}
		LIMIT #{limit}
		OFFSET #{start}
    </select>
    
    <insert
		id="add"
		parameterType="pcmOrdModel"
		flushCache="true"
		statementType="PREPARED"
		keyProperty="id"
		useGeneratedKeys="true"
		>
	    INSERT INTO pb2_pcm_ord(
	    	id
	    	,folder_ref
	    	,doc_ref
	    	,objective
	    	,section_id
	    	,pr_id
	    	,app_by
	    	,doc_type
	    	,workflow_ins_id
	    	,waiting_level
	    	,status
	    	,total
	    	,created_by,updated_by
	    ) VALUES (
	    	#{id}
	    	,#{folderRef}
	    	,#{docRef}
	    	,#{objective}
	    	,#{sectionId}
	    	,#{prId}
	    	,#{appBy}
	    	,#{docType}
    		,#{workflowInsId}
    		,#{waitingLevel}
    		,#{status}
    		,#{total}
    		,#{createdBy},#{updatedBy}
    	)
		
	</insert>
	
	<select id="count"  resultType="long">
        SELECT
		    count(1)
		FROM
		    pb2_pcm_ord
	
    </select>
	
	<update id="update" 
        parameterType="pcmOrdModel"
		flushCache="true">
     UPDATE pb2_pcm_ord 
     SET 
     	workflow_ins_id=#{workflowInsId}
		<if test="status != null">
     		,status=#{status}
		</if>			
		,app_by =#{appBy}
		,section_id =#{sectionId}
	    ,objective =#{objective}
	    ,doc_type =#{docType}
	    ,pr_id =#{prId}
	    ,total =#{total}
	    ,doc_ref =#{docRef}
	    ,folder_ref =#{folderRef}
	    ,waiting_level =#{waitingLevel}
	    ,created_by =#{createdBy}
        ,updated_by =#{updatedBy}
        ,updated_time =Now()
     WHERE id=#{id}
    </update>
    
    <select id="get" parameterType="string" resultMap="result">
        SELECT
		    *
		FROM
		    pb2_pcm_ord
		WHERE id=#{id}
    </select>
    
    <update id="updateStatus" 
        parameterType="pcmOrdModel"
		flushCache="true">
     UPDATE pb2_pcm_ord 
     SET  
	<if test="status != null">
		WAITING_LEVEL=#{waitingLevel}
	</if>
	<if test="status != null">
		, status=#{status}
	</if>
     WHERE id=#{id}
    </update>
    
	<select id="listWorkflowPath" resultType="map" parameterType="string">    
    (SELECT CONCAT('REVIEWER #',LEVEL) AS LEVEL,TRIM(BOTH ',' FROM REVIEWER_USER) AS U,TRIM(BOTH ',' FROM REVIEWER_GROUP) AS G,LEVEL AS ORDERVAL
	FROM pb2_PCM_ORD_REVIEWER
	WHERE MASTER_ID = #{id})
	ORDER BY ORDERVAL
    </select>

	<delete id="delete"
    		parameterType="string"
			flushCache="true"
			statementType="PREPARED"
			>
   		DELETE FROM pb2_pcm_ord WHERE id=#{id}
	</delete>
    
</mapper>
