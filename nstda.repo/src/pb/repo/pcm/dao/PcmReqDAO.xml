<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pb.repo.pcm.dao.PcmReqDAO">
    <resultMap id="result" type="pcmReqModel">
        <result property="id" column="id"/>
        <result property="reqBy" column="req_by"/>
        <result property="reqSectionId" column="req_section_id"/>
        <result property="objectiveType" column="objective_type"/>
        <result property="objective" column="objective"/>
        <result property="reason" column="reason"/>
        <result property="currency" column="currency"/>
        <result property="currencyRate" column="currency_rate"/>
        <result property="budgetCc" column="budget_cc"/>
        <result property="budgetCcType" column="budget_cc_type"/>
        <result property="budgetCcName" column="budget_cc_name"/>
        <result property="budgetCcTypeName" column="budget_cc_type_name"/>
        <result property="fundId" column="fund_id"/>
        <result property="fundName" column="fund_name"/>
        <result property="isStock" column="is_stock"/>
        <result property="stockSectionId" column="stock_section_id"/>
        <result property="isPrototype" column="is_prototype"/>
        <result property="prototype" column="prototype"/>
        <result property="prototypeContractNo" column="prototype_contract_no"/>
        <result property="contractDate" column="contract_date"/>
        <result property="costControlTypeId" column="cost_control_type_id"/>
        <result property="costControlTypeName" column="cost_control_type_name"/>
        <result property="costControlId" column="cost_control_id"/>
        <result property="costControlName" column="cost_control_name"/>
        <result property="pcmSectionId" column="pcm_section_id"/>
        <result property="location" column="location"/>
        <result property="isRefId" column="is_ref_id"/>
        <result property="refId" column="ref_id"/>
        <result property="isAcrossBudget" column="is_across_budget"/>
        <result property="acrossBudget" column="across_budget"/>
        <result property="prWebMethodId" column="prweb_method_id"/>
        <result property="methodCond2Rule" column="method_cond2_rule"/>
        <result property="methodCond2" column="method_cond2"/>
        <result property="methodCond2Dtl" column="method_cond2_dtl"/>
        <result property="vat" column="vat"/>
        <result property="vatId" column="vat_id"/>
        <result property="total" column="total"/>
        <result property="totalCnv" column="total_cnv"/>
        <result property="workflowInsId" column="workflow_ins_id"/>
        <result property="refDocRef" column="ref_doc_ref"/>
        <result property="docRef" column="doc_ref"/>
        <result property="folderRef" column="folder_ref"/>
        <result property="waitingLevel" column="waiting_level"/>
        <result property="requestedTime" column="requested_time"/>
        <result property="createdTime" column="created_time"/>
        <result property="createdBy" column="created_by"/>
        <result property="updatedTime" column="updated_time"/>
        <result property="updatedBy" column="updated_by"/>
        <result property="wfBy" column="wf_by"/>
        <result property="wfByTime" column="wf_by_time"/>
        <result property="wfStatus" column="wf_status"/>
        <result property="rewarning" column="rewarning"/>
        <result property="waitingDay" column="waiting_day"/>
    </resultMap>
    
    <select id="list" resultType="org.apache.commons.collections.map.CaseInsensitiveMap" parameterType="map">
		select *
		from pb2_pcm_req_view
		where (created_by_code = #{loginE} or req_by_code = #{loginE} or all_rev ilike '%'||#{loginL}||'%' )
		<if test="terms != null">
			<foreach item="item" index="index" collection="terms" open="AND (" separator=" AND " close=")">
				concat(id, ' ', objective_type_name, ' ', objective_type_name_th, ' ',objective,' ',currency,' ',req_by,' ',req_by_th,' ',created_by,' ',created_by_th,to_char(requested_time, 'dd/mm/yyyy'), ' ', budget_cc_name, ' ', budget_cc_name_th) ILIKE '%'||#{item}||'%'
	   		</foreach>
   		</if>  
		<if test="status != null">
			AND status=#{status}
		</if>
		<if test="objective_type != null">
			AND objective_type=#{objective_type}
		</if>
		ORDER BY ${orderBy}
		LIMIT #{limit}
		OFFSET #{start}
    </select>
    
    <select id="llist" resultMap="result" parameterType="map">
        SELECT
		    REQ.ID, total, total_cnv, CASE WHEN #{lang}='' THEN mm.flag2 ELSE mm.name END objective_type, objective, 
		    	budget_cc, budget_cc_type, CASE WHEN #{lang}='' THEN b.name ELSE b.name_th END budget_cc_name,
		    	WF_BY, WF_BY_TIME,
				WF_STATUS, STATUS, reason, currency,
				cost_control_id, cost_control_type_id, 
				location, 
				prweb_method_id, method_cond2, method_cond2_rule, method_cond2_dtl,
				WORKFLOW_INS_ID, TASK_ID,
				REQ.UPDATED_TIME, REQ.UPDATED_BY, REQ.CREATED_TIME, 
				FOLDER_REF, DOC_REF, contract_date,
  			CASE 
  				WHEN STATUS='D' THEN '1'
            	WHEN STATUS='W2' THEN '2'
            	WHEN STATUS='W1' THEN '3'
            	WHEN STATUS='S' THEN '4'
            	WHEN STATUS='C1' THEN '5'
            	WHEN STATUS='C2' THEN '6'
            	WHEN STATUS='X1' THEN '7'
            	WHEN STATUS='X2' THEN '8'
            	ELSE STATUS
       		END ORDER_FIELD,
	      	COALESCE(CBY ,REQ.CREATED_BY) CREATED_BY,
	      	COALESCE(RBY ,REQ_BY) REQ_BY,
		    COUNT(*) OVER() totalRowCount
		FROM
		    (SELECT ID, total, total_cnv, objective_type, objective, budget_cc, budget_cc_type, contract_date, currency,
		    	NULL WF_BY, NULL WF_BY_TIME,
				NULL WF_STATUS, STATUS, reason, cost_control_id, cost_control_type_id, location, prweb_method_id, method_cond2, method_cond2_rule, method_cond2_dtl,
				WORKFLOW_INS_ID, NULL TASK_ID,
				UPDATED_TIME, UPDATED_BY, CREATED_TIME, CREATED_BY,
				(select CASE 
					WHEN #{lang}='' THEN 
						first_name
					ELSE
						coalesce((select value
						from pb2_ext_ir_translation
						where name = 'hr.employee,first_name'
						and type = 'model' and lang='th_TH'
						and res_id = e3.id), e3.first_name)
					END
					first_name
				from pb2_ext_hr_employee e3 where lpad(employee_code,6,'0') = pb2_pcm_req.created_by) CBY,
				FOLDER_REF, DOC_REF, REQ_BY,
				(select CASE 
					WHEN #{lang}='' THEN 
						first_name
					ELSE
						coalesce((select value
						from pb2_ext_ir_translation
						where name = 'hr.employee,first_name'
						and type = 'model' and lang='th_TH'
						and res_id = e4.id), e4.first_name)
					END
					first_name
				from pb2_ext_hr_employee e4 where lpad(employee_code,6,'0') = pb2_pcm_req.req_by) RBY
			FROM pb2_pcm_req
			WHERE STATUS='D' AND CREATED_BY=#{loginE}
 			UNION
			SELECT ID, M.total, M.total_cnv, objective_type, objective, budget_cc, budget_cc_type, contract_date, currency,
				W.BY WF_BY,
				CASE WHEN (W.STATUS IS NULL) THEN ''
				ELSE to_char(W.BY_TIME, 'DD/MM/YYYY HH24:MI') 
				END WF_BY_TIME,
				W.STATUS${lang} WF_STATUS, M.STATUS, reason, cost_control_id, cost_control_type_id, location, prweb_method_id, method_cond2, method_cond2_rule, method_cond2_dtl,
				M.WORKFLOW_INS_ID, TASK_ID,
				UPDATED_TIME, UPDATED_BY, CREATED_TIME, CREATED_BY,
				(select CASE 
					WHEN #{lang}='' THEN 
						first_name
					ELSE
						coalesce((select value
						from pb2_ext_ir_translation
						where name = 'hr.employee,first_name'
						and type = 'model' and lang='th_TH'
						and res_id = e1.id), e1.first_name)
					END
					first_name
				from pb2_ext_hr_employee e1 where lpad(employee_code,6,'0') = M.created_by) CBY,
				FOLDER_REF, DOC_REF, REQ_BY,
				(select CASE 
					WHEN #{lang}='' THEN 
						first_name
					ELSE
						coalesce((select value
						from pb2_ext_ir_translation
						where name = 'hr.employee,first_name'
						and type = 'model' and lang='th_TH'
						and res_id = e2.id), e2.first_name)
					END
					first_name
				from pb2_ext_hr_employee e2 where lpad(employee_code,6,'0') = M.req_by) RBY 
			FROM pb2_pcm_req M 
			LEFT JOIN 
			(
			SELECT MASTER_ID, WORKFLOW_INS_ID, STATUS, STATUS_TH,
			CASE 
			WHEN #{lang}='' THEN 
				e.first_name
			ELSE
				coalesce((select value
				from pb2_ext_ir_translation
				where name = 'hr.employee,first_name'
				and type = 'model' and lang='th_TH'
				and res_id = e.id), e.first_name)
			END as
			BY, BY_TIME, TASK_ID 
			FROM pb2_main_workflow w  left join pb2_ext_hr_employee e on w.by = lpad(e.employee_code,6,'0')
			WHERE TYPE='PCM_REQ' AND 
			w.ID IN (
				SELECT MAX(ID)
				FROM pb2_main_workflow 
				GROUP BY MASTER_ID
			)) AS W ON M.ID = W.MASTER_ID 
			WHERE M.STATUS != 'D'
			AND (
	 			ID IN ( 
					SELECT master_id 
					FROM pb2_main_workflow_reviewer 
					WHERE reviewer_user LIKE #{loginL} 
					<foreach item="item" index="index" collection="roleList"
				      open="OR (" separator="OR" close=")">
				        reviewer_group LIKE #{item}
				    </foreach>
					GROUP BY master_id
				)
				OR id IN (SELECT master_id FROM pb2_main_workflow_next_actor WHERE actor_user LIKE #{loginE} GROUP BY master_id)
				OR CREATED_BY = #{loginE} 
				OR REQ_BY = #{loginE}
			)
		) REQ
		LEFT JOIN
		(
			select 'U' _type,id,concat('[',trim(code),'] ',name) "name", concat('[',trim(code),'] ',name_th) name_th
			from (select code,id,name,
				coalesce((select value
					from pb2_ext_ir_translation
					where name = 'res.section,name'
					and type = 'model' and lang='th_TH'
					and res_id = sec.id), name) as name_th
				from pb2_ext_res_section sec) s
			union
			select 'P' _type,id,concat('[',trim(code),'] ',name) "name", concat('[',trim(code),'] ',name_th) name_th
			from (select p.id,p.name, p.code,
			coalesce((select value
				from pb2_ext_ir_translation
				where name = 'res.project,name'
				and type = 'model' and lang='th_TH'
				and res_id = p.id), p.name) as name_th
				FROM pb2_ext_res_project p) pro
		) b on (REQ.budget_cc_type = b._type and REQ.budget_cc = b.id)
		LEFT JOIN pb2_main_master mm on (REQ.objective_type=mm.code and mm.type='PC')
		
		WHERE
			1=1
		<if test="terms != null">
			<foreach item="item" index="index" collection="terms" open="AND (" separator=" AND " close=")">
	    			concat(REQ.id, ' ', objective_type, ' ', objective, ' ', reason, ' ', location, ' ', method_cond2_rule, ' ', method_cond2, ' ', method_cond2_dtl) ILIKE '%'||#{item}||'%'
	   		</foreach>
   		</if>  
		<if test="status != null">
			AND status=#{status}
		</if>
		<if test="objective_type != null">
			AND objective_type=#{objective_type}
		</if>
		ORDER BY ${orderBy}
		LIMIT #{limit}
		OFFSET #{start}
    </select>
    
    <select id="listForSearch" resultMap="result" parameterType="map">
		SELECT REQ.ID, total, total_cnv, objective_type, b.name budget_cc_name, status, objective,FOLDER_REF, DOC_REF, COALESCE(CBY ,CREATED_BY) CREATED_BY, COALESCE(RBY ,REQ_BY) REQ_BY, COUNT(*) OVER() totalRowCount, CREATED_TIME
		FROM
      		(SELECT ID, M.total, M.total_cnv, objective_type, objective, budget_cc, budget_cc_type, M.STATUS, reason, cost_control_id, cost_control_type_id, location, prweb_method_id, method_cond2, method_cond2_rule, method_cond2_dtl,
    		M.WORKFLOW_INS_ID ,
    		UPDATED_TIME, UPDATED_BY, CREATED_TIME, CREATED_BY,
    		(select first_name from pb2_ext_hr_employee where lpad(employee_code,6,'0') = M.created_by) CBY,
    		FOLDER_REF, DOC_REF, REQ_BY,
    		(select first_name from pb2_ext_hr_employee where lpad(employee_code,6,'0') = M.req_by) RBY, is_ref_id
   			FROM pb2_pcm_req M  
   			WHERE M.STATUS not in ('D','X1','X2')
  			) REQ
  		LEFT JOIN
  		(
   			select 'U' _type,id,name
   			from pb2_ext_res_section
   			union
   			select 'P' _type,id,p.code||' - '||p.name
   			from pb2_ext_res_project p
  		) b on (REQ.budget_cc_type = b._type and REQ.budget_cc = b.id)
  		WHERE (
  			created_by = #{loginE} 
  			AND is_ref_id='0'
  			AND REQ.ID not in (select ref_id from pb2_pcm_req where is_ref_id='1' and status not in ('X1','X2'))
  			AND status not in ('X1','X2')
  		)
		<if test="terms != null">
			<foreach item="item" index="index" collection="terms" open="AND (" separator=" AND " close=")">
	    			concat(REQ.id, ' ', objective_type, ' ', objective, ' ', reason, ' ', location, ' ', method_cond2_rule, ' ', method_cond2, ' ', method_cond2_dtl) ILIKE '%'||#{item}||'%'
	   		</foreach>
   		</if>
   		<if test="objective_type != null">
			AND objective_type=#{objective_type}
		</if> 
		ORDER BY ${orderBy}
		LIMIT #{limit}
		OFFSET #{start}
    </select>    
    
    <insert
		id="add"
		parameterType="pcmReqModel"
		flushCache="true"
		statementType="PREPARED"
		keyProperty="id"
		useGeneratedKeys="true"
		>
	    INSERT INTO pb2_pcm_req(
	    	id
	    	,req_by,req_section_id
	    	,objective_type,objective,reason
	    	,currency,currency_rate
	    	,budget_cc,budget_cc_type
	    	,fund_id
	    	,is_stock,stock_section_id
	    	,is_prototype,prototype,prototype_contract_no
	    	,cost_control_id,cost_control_type_id
	    	,pcm_section_id,location
	    	,is_across_budget,across_budget
	    	,is_ref_id,ref_id
	    	,prweb_method_id
	    	,method_cond2_rule,method_cond2,method_cond2_dtl
	    	,vat,vat_id
	    	,total,total_cnv
	    	,contract_date
	    	,doc_ref,folder_ref,ref_doc_ref
	    	,waiting_level,status
	    	,created_by,updated_by
	    ) VALUES (
	    	#{id}
	    	,#{reqBy},#{reqSectionId}
	    	,#{objectiveType},#{objective},#{reason}
	    	,#{currency},#{currencyRate}
	    	,#{budgetCc},#{budgetCcType}
	    	,#{fundId}
	    	,#{isStock},#{stockSectionId}
	    	,#{isPrototype},#{prototype},#{prototypeContractNo}
	    	,#{costControlId},#{costControlTypeId}
	    	,#{pcmSectionId},#{location}
	    	,#{isAcrossBudget},#{acrossBudget}
	    	,#{isRefId},#{refId}
	    	,#{prWebMethodId}
	    	,#{methodCond2Rule},#{methodCond2},#{methodCond2Dtl}
	    	,#{vat},#{vatId}
    		,#{total},#{totalCnv}
    		,#{contractDate}
    		,#{docRef},#{folderRef},#{refDocRef}
    		,#{waitingLevel},#{status}
    		,#{createdBy},#{updatedBy}
    	)
		
	</insert>
	
	<select id="count"  resultType="long">
        SELECT
		    count(1)
		FROM
		    pb2_pcm_req
	
    </select>
	
	<delete id="delete"
    		parameterType="string"
			flushCache="true"
			statementType="PREPARED"
			>
   		DELETE FROM pb2_pcm_req WHERE id=#{id}
	</delete>
	
	<update id="update" 
        parameterType="pcmReqModel"
		flushCache="true">
     UPDATE pb2_pcm_req 
     SET 
     	workflow_ins_id=#{workflowInsId}
		<if test="status != null">
     		,status=#{status}
		</if>			
		,req_by =#{reqBy}
		,req_section_id =#{reqSectionId}
	    ,objective_type =#{objectiveType}
	    ,objective =#{objective}
	    ,reason =#{reason}
	    ,currency =#{currency}
	    ,currency_rate =#{currencyRate}
	    ,budget_cc =#{budgetCc}
	    ,budget_cc_type =#{budgetCcType}
	    ,fund_id =#{fundId}
	    ,is_stock =#{isStock}
	    ,stock_section_id =#{stockSectionId}
	    ,is_prototype =#{isPrototype}
	    ,prototype =#{prototype}
	    ,prototype_contract_no =#{prototypeContractNo}
	    ,cost_control_type_id =#{costControlTypeId}
	    ,cost_control_id =#{costControlId}
	    ,pcm_section_id =#{pcmSectionId}
	    ,location =#{location}
	    ,is_across_budget =#{isAcrossBudget}
	    ,across_budget =#{acrossBudget}
	    ,is_ref_id =#{isRefId}
	    ,ref_id =#{refId}
	    ,prweb_method_id =#{prWebMethodId}
	    ,method_cond2_rule =#{methodCond2Rule}
	    ,method_cond2 =#{methodCond2}
	    ,method_cond2_dtl =#{methodCond2Dtl}
	    ,vat =#{vat}
	    ,vat_id =#{vatId}
	    ,total =#{total}
	    ,total_cnv =#{totalCnv}
	    ,contract_date =#{contractDate}
	    ,ref_doc_ref =#{refDocRef}
	    ,doc_ref =#{docRef}
	    ,folder_ref =#{folderRef}
	    ,waiting_level =#{waitingLevel}
        ,updated_by =#{updatedBy}
        ,updated_time =Now()
        ,requested_time =#{requestedTime}
     WHERE id=#{id}
    </update>
    
    <select id="get" parameterType="string" resultMap="result">
        SELECT
		    *, CASE WHEN #{lang}='' THEN b.name ELSE b.name_th END budget_cc_name,
		    c.name cost_control_name, ct.name cost_control_type_name, f.name fund_name,
		    CASE 
  				WHEN budget_cc_type='U' THEN CASE WHEN #{lang}='' THEN 'Organization' ELSE 'หน่วยงาน' END 
            	WHEN budget_cc_type='P' THEN CASE WHEN #{lang}='' THEN 'Project' ELSE 'โครงการ' END
            	ELSE budget_cc_type
       		END budget_cc_type_name
		FROM
		    pb2_pcm_req r
		LEFT JOIN
		(
			select 'U' _type,id,concat('[',trim(code),'] ',name) "name", concat('[',trim(code),'] ',name_th) name_th
			from (select code,id,name,
				coalesce((select value
					from pb2_ext_ir_translation
					where name = 'res.section,name'
					and type = 'model' and lang='th_TH'
					and res_id = sec.id), name) as name_th
				from pb2_ext_res_section sec) s
			union
			select 'P' _type,id,concat('[',trim(code),'] ',name) "name", concat('[',trim(code),'] ',name_th) name_th
			from (select p.id,p.name, p.code,
			coalesce((select value
				from pb2_ext_ir_translation
				where name = 'res.project,name'
				and type = 'model' and lang='th_TH'
				and res_id = p.id), p.name) as name_th
				FROM pb2_ext_res_project p) pro
		) b on (r.budget_cc_type = b._type and r.budget_cc = b.id)		
		
		LEFT JOIN pb2_ext_res_fund f on (r.fund_id = f.id)
		
		LEFT JOIN pb2_ext_cost_control c on (r.cost_control_id = c.id)
		LEFT JOIN pb2_ext_cost_control_type ct on (r.cost_control_type_id = ct.id)
		
		WHERE r.id=#{id}
    </select>
    
    <select id="genNewId" parameterType="map" resultType="string">
    	SELECT CONCAT(field2,TO_CHAR(CURRENT_TIMESTAMP, 'YYYYMM'),'-',TRIM(TO_CHAR(CAST (RIGHT(id, 3) AS INT)+1,'000'))) NEW_ID 
    	FROM pb2_pcm_req
    	WHERE field2 = #{f2}
    	AND CONCAT(field2,TO_CHAR(CURRENT_TIMESTAMP, 'YYYYMM'),'-') = SUBSTRING(id,1,LENGTH(ID)-3) 
    	ORDER BY id DESC 
    	LIMIT 1
    </select>
    
    <select id="getLastId" parameterType="map" resultType="string">
    	SELECT id 
    	FROM pb2_pcm_req
    	WHERE id like #{idPrefix}
    	ORDER BY id DESC 
    	LIMIT 1
    </select>
    
	<select id="getNewRunningNo"  resultType="long">
		SELECT nextval('pb2_pcm_req_id_seq')
    </select>
    
	<select id="resetRunningNo"  resultType="long">
		SELECT setval('pb2_pcm_req_id_seq',1,false)	
    </select>
    
    <update id="updateStatus" 
        parameterType="pcmReqModel"
		flushCache="true">
     UPDATE pb2_pcm_req 
     SET  
	<if test="status != null">
		WAITING_LEVEL=#{waitingLevel}
	</if>
	<if test="status != null">
		, status=#{status}
	</if>
     WHERE id=#{id}
    </update>
    
    
    <select id="listForInf" resultType="org.apache.commons.collections.map.CaseInsensitiveMap" parameterType="map">
		select 
			r.id req_id,
			r.req_by,
			r.contract_date,
			a.actor_user rp_id,
			<!-- case when (r.is_across_budget = '1') then across_budget else 0 end total, -->
			case when (r.is_across_budget = '1') then r.total_cnv else 0 end total,
			r.prototype, 
			pm.type_id method_type,
			r.stock_section_id,
			r.pcm_section_id,
			r.reason,
			r.objective,
			c.id currency_id,
			currency_rate,
			location, 
			r.updated_time,
			r.created_time,
			pur_org_id, 
			r.is_prototype,
			budget_cc,
			r.fund_id,
			prweb_method_id, 
			r.method_cond2,
			method_cond2_dtl,
			method_id,
			w.by last_approver,
			w.by_time,
			case when (r.is_ref_id = '1') then ref_id else '' end ref_id,
			pm.price_range_id,pm.condition_id
		from pb2_pcm_req r
		left join pb2_main_workflow_next_actor a on r.id = a.master_id --Next Actor
		left join pb2_ext_res_currency c on r.currency = c.name
		left join
			(select org_id pur_org_id,p.id
			from pb2_ext_wkf_config_purchase_unit p, pb2_ext_wkf_config_doctype d
			where p.doctype_id = d.id and d.name = 'PR' ) pu on r.pcm_section_id = pu.id
		left join pb2_main_workflow w on w.master_id = r.id --Last Approver
		left join pb2_ext_prweb_purchase_method pm on prweb_method_id = pm.id
		where r.id = #{id}
    </select>
    
    <select id="getFirstApprover" parameterType="string" resultType="org.apache.commons.collections.map.CaseInsensitiveMap">
		SELECT e.title_th||' '||e.first_name_th||' '||e.last_name_th approver, h.time
		FROM pb2_main_workflow_reviewer r
		LEFT JOIN pb2_main_workflow w on w.master_id=r.master_id
		LEFT JOIN pb2_main_workflow_history h ON w.id=h.master_id and r.reviewer_user=h.by
		LEFT JOIN pb2_hr_employee_view e on r.reviewer_user = lpad(e.employee_code, 6 ,'0')
		WHERE w.type='PCM_REQ'
		AND r.master_id=#{id}
		AND r.level=1
		AND h.action='Approve'
		LIMIT 1
    </select>
    
    <select id="getLastApprover" parameterType="string" resultType="org.apache.commons.collections.map.CaseInsensitiveMap">
		SELECT e.title_th||' '||e.first_name_th||' '||e.last_name_th approver, h.time
		FROM pb2_main_workflow_reviewer r
		LEFT JOIN pb2_main_workflow w on w.master_id=r.master_id
		LEFT JOIN pb2_main_workflow_history h ON w.id=h.master_id and r.reviewer_user=h.by
		LEFT JOIN pb2_hr_employee_view e on r.reviewer_user = lpad(e.employee_code, 6 ,'0')
		WHERE w.type='PCM_REQ'
		AND r.master_id=#{id}
		AND r.level=(select max(level) from pb2_main_workflow_reviewer where master_id=#{id})
		AND h.action='Approve'
		LIMIT 1
    </select>
    
</mapper>
